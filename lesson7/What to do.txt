Перенести приведенный ниже код в новый проект, где мы организуем гонки.
Все участники должны стартовать одновременно, несмотря на разное время подготовки. В тоннель не
может одновременно заехать больше половины участников (условность).
Попробуйте все это синхронизировать.
Когда все завершат гонку, нужно выдать объявление об окончании.
Можно корректировать классы (в том числе конструктор машин) и добавлять объекты классов из
пакета util.concurrent.
Обязательно необходимо объявить победителя гонки, он должен быть только один, и это участник
первым закончивший последний этап.

Код переносить в условия уже не стал.
Что добавил к коду:
1. CyclicBarrier в класс Main и в Car. Синхронизировал их, чтобы сообщения выводились в нужной последовательности. 
Потоков CARS_COUNT + 1, т.к. main тоже поток 
2. Сделал Semaphore в туннеле, по условию въехать может только CARS_COUNT/2
3. Для определения победителя сделал AtomicInteger, чтобы удостовериться, что только одна машина в один момент будет вносить
в него изменения. Если было 0, увеличиваем на 1 и ставим boolean isWinner в true.